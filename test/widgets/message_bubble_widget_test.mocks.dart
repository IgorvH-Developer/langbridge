// Mocks generated by Mockito 5.4.6 from annotations
// in LangBridge/test/widgets/message_bubble_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter/foundation.dart' as _i2;
import 'package:LangBridge/models/language.dart' as _i9;
import 'package:LangBridge/models/message.dart' as _i4;
import 'package:LangBridge/models/transcription_data.dart' as _i10;
import 'package:LangBridge/models/user_profile.dart' as _i8;
import 'package:LangBridge/services/api_service.dart' as _i7;
import 'package:LangBridge/services/chat_socket_service.dart' as _i3;
import 'package:LangBridge/services/webrtc_manager.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatSocketService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatSocketService extends _i1.Mock implements _i3.ChatSocketService {
  MockChatSocketService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<Map<String, dynamic>?> get signalingMessageNotifier =>
      (super.noSuchMethod(
            Invocation.getter(#signalingMessageNotifier),
            returnValue: _FakeValueNotifier_0<Map<String, dynamic>?>(
              this,
              Invocation.getter(#signalingMessageNotifier),
            ),
          )
          as _i2.ValueNotifier<Map<String, dynamic>?>);

  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);

  @override
  _i2.ValueNotifier<List<_i4.Message>> get messagesNotifier =>
      (super.noSuchMethod(
            Invocation.getter(#messagesNotifier),
            returnValue: _FakeValueNotifier_0<List<_i4.Message>>(
              this,
              Invocation.getter(#messagesNotifier),
            ),
          )
          as _i2.ValueNotifier<List<_i4.Message>>);

  @override
  set webRTCManager(_i5.WebRTCManager? value) => super.noSuchMethod(
    Invocation.setter(#webRTCManager, value),
    returnValueForMissingStub: null,
  );

  @override
  set currentChatId(String? value) => super.noSuchMethod(
    Invocation.setter(#currentChatId, value),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> connect(
    String? chatId,
    List<_i4.Message>? initialMessages,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#connect, [chatId, initialMessages]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void sendSignalingMessage(Map<String, dynamic>? message) =>
      super.noSuchMethod(
        Invocation.method(#sendSignalingMessage, [message]),
        returnValueForMissingStub: null,
      );

  @override
  void sendMessage({
    required String? sender,
    required String? content,
    _i4.MessageType? type = _i4.MessageType.text,
    String? replyToMessageId,
  }) => super.noSuchMethod(
    Invocation.method(#sendMessage, [], {
      #sender: sender,
      #content: content,
      #type: type,
      #replyToMessageId: replyToMessageId,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void disconnect() => super.noSuchMethod(
    Invocation.method(#disconnect, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i7.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<Map<String, String>?> loginAndGetData(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#loginAndGetData, [username, password]),
            returnValue: _i6.Future<Map<String, String>?>.value(),
          )
          as _i6.Future<Map<String, String>?>);

  @override
  _i6.Future<bool> register(
    String? username,
    String? password,
    int? nativeLanguageId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#register, [
              username,
              password,
              nativeLanguageId,
            ]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i8.UserProfile?> getMyProfile() =>
      (super.noSuchMethod(
            Invocation.method(#getMyProfile, []),
            returnValue: _i6.Future<_i8.UserProfile?>.value(),
          )
          as _i6.Future<_i8.UserProfile?>);

  @override
  _i6.Future<_i8.UserProfile?> updateUserProfile(
    String? userId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [userId, data]),
            returnValue: _i6.Future<_i8.UserProfile?>.value(),
          )
          as _i6.Future<_i8.UserProfile?>);

  @override
  _i6.Future<_i8.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, [userId]),
            returnValue: _i6.Future<_i8.UserProfile?>.value(),
          )
          as _i6.Future<_i8.UserProfile?>);

  @override
  _i6.Future<List<_i8.UserProfile>?> findUsers({
    String? nativeLangCode,
    String? learningLangCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#findUsers, [], {
              #nativeLangCode: nativeLangCode,
              #learningLangCode: learningLangCode,
            }),
            returnValue: _i6.Future<List<_i8.UserProfile>?>.value(),
          )
          as _i6.Future<List<_i8.UserProfile>?>);

  @override
  _i6.Future<String?> uploadAvatar(String? userId, String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#uploadAvatar, [userId, filePath]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<List<_i9.Language>?> getAllLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLanguages, []),
            returnValue: _i6.Future<List<_i9.Language>?>.value(),
          )
          as _i6.Future<List<_i9.Language>?>);

  @override
  _i6.Future<Map<String, dynamic>?> getOrCreatePrivateChat(String? partnerId) =>
      (super.noSuchMethod(
            Invocation.method(#getOrCreatePrivateChat, [partnerId]),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<List<Map<String, dynamic>>?> getAllChats() =>
      (super.noSuchMethod(
            Invocation.method(#getAllChats, []),
            returnValue: _i6.Future<List<Map<String, dynamic>>?>.value(),
          )
          as _i6.Future<List<Map<String, dynamic>>?>);

  @override
  _i6.Future<List<Map<String, dynamic>>?> getChatMessages(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#getChatMessages, [chatId]),
            returnValue: _i6.Future<List<Map<String, dynamic>>?>.value(),
          )
          as _i6.Future<List<Map<String, dynamic>>?>);

  @override
  _i6.Future<void> markChatAsRead(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#markChatAsRead, [chatId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>?> uploadVideo({
    required List<Map<String, dynamic>>? segments,
    required String? chatId,
    required String? senderId,
    String? replyToMessageId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadVideo, [], {
              #segments: segments,
              #chatId: chatId,
              #senderId: senderId,
              #replyToMessageId: replyToMessageId,
            }),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<Map<String, dynamic>?> uploadAudio({
    required String? filePath,
    required String? chatId,
    required String? senderId,
    String? replyToMessageId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadAudio, [], {
              #filePath: filePath,
              #chatId: chatId,
              #senderId: senderId,
              #replyToMessageId: replyToMessageId,
            }),
            returnValue: _i6.Future<Map<String, dynamic>?>.value(),
          )
          as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<bool> updateUserLanguages(
    String? userId,
    List<Map<String, dynamic>>? languagesData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserLanguages, [userId, languagesData]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i10.TranscriptionData?> getTranscriptionForMessage(
    String? messageId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTranscriptionForMessage, [messageId]),
            returnValue: _i6.Future<_i10.TranscriptionData?>.value(),
          )
          as _i6.Future<_i10.TranscriptionData?>);

  @override
  _i6.Future<bool> updateTranscriptionForMessage(
    String? messageId,
    _i10.TranscriptionData? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTranscriptionForMessage, [
              messageId,
              data,
            ]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<String?> translateText(String? text, String? targetLanguageCode) =>
      (super.noSuchMethod(
            Invocation.method(#translateText, [text, targetLanguageCode]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);
}
